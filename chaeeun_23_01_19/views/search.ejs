<!doctype html>
<!--<html lang="en"> language option이 영어라는 뜻-->
<html>

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
        integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">

    <link rel="stylesheet" href="/public/main.css">

    <title>Hello, world!</title>
</head>

<body>
    <!--<h1>Hello, world!</h1>-->

    <!--Bootstrap button-->
    <!--<button type="button" class="btn btn-primary">Primary</button>
    <button type="button" class="btn btn-secondary">Secondary</button>
    <button type="button" class="btn btn-success">Success</button>
    <button type="button" class="btn btn-danger">Danger</button>
    <button type="button" class="btn btn-warning">Warning</button>
    <button type="button" class="btn btn-info">Info</button>
    <button type="button" class="btn btn-light">Light</button>
    <button type="button" class="btn btn-dark">Dark</button>

    <button type="button" class="btn btn-link">Link</button>-->



    <%- include('nav.html') %>

    <!-- Binary Search를 적용하고 싶으면 Index를 만들어둔다
    MongoDB 문자자료는 index 만들 때 한꺼번에 한다
    DB 조작은 원래 터미널로 한다 (터미널에서 DB접속해서 이것저것 명령을 준다)
    참고로 MongoDB에서 Command Line Tools 메뉴에서 터미널로 할 수 있다 -->

        <h4 class="ml-2 my-3 text-center">서버에서 가져온 할 일 리스트</h4>



        <script src="https://code.jquery.com/jquery-3.5.1.min.js" crossorigin="anonymous"></script>

        <!--검색 누르면 새로운 페이지에서 검색결과 보여주는 기능-->
        <div class="container input-group mb-2">
            <input class="form-control" id="search-input">
            <button class="input-group-append btn btn-danger" id="search">검색</button>
        </div>

        <script>
            $('#search').click(function () {
                // 현재 페이지 url 바꾸는 법 (실은 GET 요청이랑 같다)
                var inputval = $('#search-input').val() // <input>에 유저가 입력한 값
                window.location.replace('/search?value=' + inputval);
                // 버튼 누르면 /search로 이동함 (GET 요청함)
                // GET 요청 시 query string으로 정보 전달하기
            })
        </script>



        <div class="container">
            <ul class="list-group">
                <% for(var i=0; i < posts.length; i++){ %>
                    <li class="list-group-item">
                        <p>글 번호 : <%= posts[i]._id %></p>
                        <h4>할 일 제목 : <%= posts[i].title %></h4>
                        <p>할 일 마감 날짜 : <%= posts[i].writingcommu %></p>
                        <button class="btn btn-danger delete" data-id="<%= posts[i]._id %>">삭제</button>
                    </li>
                    <% } %>
                        <!--<li class="list-group-item">A second item</li>
          <li class="list-group-item">A third item</li>
          <li class="list-group-item">A fourth item</li>
          <li class="list-group-item">And a fifth one</li>-->
            </ul>
        </div>



        <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>
        <script>
            $('.delete').click(function (e) {
                var postnum = e.target.dataset.id;
                var pressed = $(this);

                $.ajax({
                    method: 'DELETE',
                    url: '/delete',
                    data: { _id: postnum }
                }).done(function (result) {
                    //페이지를 강제로 새로고침해주세요
                    //삭제버튼을 누른 <li> 요소를 안보이게 하거나 제거해주세요
                    console.log('성공했습니다'); // 브라우저 콘솔창
                    pressed.parent('li').fadeOut();
                }).fail(function (xhr, textStatus, errorThrown) {
                    // 요청이 실패 시 실행할 코드는 여기
                    console.log('실패했습니다');
                    console.log(xhr, textStatus, errorThrown);
                });
            });
        </script>


        <!-- Optional JavaScript; choose one of the two! -->

        <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->
        <!--<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct"
            crossorigin="anonymous"></script>

        <!-- Option 2: Separate Popper and Bootstrap JS -->
        <!--
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js" integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+" crossorigin="anonymous"></script>
    -->
</body>

</html>
